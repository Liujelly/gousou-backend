{
  "code": 0,
  "data": {
    "records": [
      {
        "id": "1656849068787273729",
        "title": "最近想做一个将idea中的日志加appium中的日志结合一个网页中的项目（实时获取日志）",
        "description": null,
        "content": "希望各位能推荐数据可视化的项目",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 2,
        "thumbNum": 1,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1653409104980389889",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-12T02:29:35.000+00:00",
        "updateTime": "2023-05-12T09:22:13.000+00:00",
        "user": {
          "id": "1653409104980389889",
          "planetCode": "21436",
          "userName": "无名",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1653409104980389889/vfNjiMPg-微信图片_20230507223915.jpg",
          "gender": 1,
          "userProfile": "总是希望找出最优解。",
          "userRole": "vip",
          "interests": [
            "面试题",
            "GitHub",
            "书籍",
            "资源",
            "工具",
            "教程",
            "项目",
            "B站",
            "Java",
            "Java 基础",
            "Javascript",
            "后端",
            "文档",
            "简历",
            "开源",
            "面试",
            "框架",
            "算法",
            "面试题挑战",
            "文章",
            "综合门户",
            "信息安全",
            "数据库",
            "软件",
            "插件",
            "自我介绍",
            "Linux",
            "阿里",
            "腾讯",
            "百度",
            "操作系统",
            "面经",
            "数据",
            "组件库",
            "HTML",
            "编程",
            "大数据",
            "Redis",
            "NodeJS",
            "开发",
            "求职",
            "博客",
            "小程序",
            "API接口",
            "类库",
            "系统",
            "效率",
            "数据结构",
            "Apache",
            "京东",
            "SQL",
            "分布式",
            "MySQL",
            "Gitee",
            "笔记",
            "学习路线",
            "模板",
            "练习",
            "设计模式",
            "云服务",
            "学习建议",
            "内推",
            "谷歌",
            "CSDN",
            "英语",
            "格式转换",
            "可视化",
            "招聘",
            "Spring",
            "微服务",
            "创作者",
            "正则表达式",
            "技术团队",
            "论文",
            "建站",
            "区块链",
            "APP",
            "加密转码",
            "云原生",
            "架构",
            "爬虫",
            "计算机基础",
            "服务器",
            "阿里巴巴",
            "性能",
            "开源中国",
            "面试题解",
            "翻译",
            "Bootstrap",
            "知乎",
            "开发规范",
            "JSON",
            "LeetCode",
            "代码托管",
            "数据科学",
            "镜像",
            "问答",
            "1年工作经验",
            "多线程",
            "JVM"
          ],
          "place": "贵阳",
          "birthday": "1998-08-19",
          "school": "大连交通大学",
          "major": "软件工程",
          "education": "本科",
          "graduationYear": 2022,
          "jobStatus": "已工作",
          "company": null,
          "job": "后端",
          "workYear": 1,
          "direction": "后端",
          "goal": "社招",
          "github": null,
          "blog": null,
          "score": 10,
          "coin": 100,
          "followeeNum": 1,
          "followNum": 2,
          "followStatus": null,
          "vipExpireTime": "2024-05-06T08:11:59.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-05-02T14:40:24.000+00:00",
          "updateTime": "2023-05-12T02:24:04.000+00:00"
        },
        "tags": [
          "文章",
          "问答"
        ],
        "fileList": null,
        "videoList": [],
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1656834250458042369",
        "title": "appium执行自动化爬虫获取数据出现：UiAutomation not connected!解决方案",
        "description": "appium+fiddler+java+mumu模拟器执行自动化爬虫获取数据出现：UiAutomation not connected!解决方案",
        "content": "   在使用appium+java脚本执行自动化时出现UiAutomation not connected!，查询网上解决方案不是让重启appium、模拟器、手机或者让提升程序优先级的方案失败后，实验得出的另一种方案，记录失败位置（失败时商品的标题或者其他），java脚本中重启一个连接，重新到达其位置再执行脚本采取数据的方法，如有其他方法，如能分享万分感谢。",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 3,
        "thumbNum": 1,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1653409104980389889",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-12T01:30:42.000+00:00",
        "updateTime": "2023-05-12T08:02:07.000+00:00",
        "user": {
          "id": "1653409104980389889",
          "planetCode": "21436",
          "userName": "无名",
          "userAvatar": "https://pic.code-nav.cn/user_avatar/1653409104980389889/vfNjiMPg-微信图片_20230507223915.jpg",
          "gender": 1,
          "userProfile": "总是希望找出最优解。",
          "userRole": "vip",
          "interests": [
            "面试题",
            "GitHub",
            "书籍",
            "资源",
            "工具",
            "教程",
            "项目",
            "B站",
            "Java",
            "Java 基础",
            "Javascript",
            "后端",
            "文档",
            "简历",
            "开源",
            "面试",
            "框架",
            "算法",
            "面试题挑战",
            "文章",
            "综合门户",
            "信息安全",
            "数据库",
            "软件",
            "插件",
            "自我介绍",
            "Linux",
            "阿里",
            "腾讯",
            "百度",
            "操作系统",
            "面经",
            "数据",
            "组件库",
            "HTML",
            "编程",
            "大数据",
            "Redis",
            "NodeJS",
            "开发",
            "求职",
            "博客",
            "小程序",
            "API接口",
            "类库",
            "系统",
            "效率",
            "数据结构",
            "Apache",
            "京东",
            "SQL",
            "分布式",
            "MySQL",
            "Gitee",
            "笔记",
            "学习路线",
            "模板",
            "练习",
            "设计模式",
            "云服务",
            "学习建议",
            "内推",
            "谷歌",
            "CSDN",
            "英语",
            "格式转换",
            "可视化",
            "招聘",
            "Spring",
            "微服务",
            "创作者",
            "正则表达式",
            "技术团队",
            "论文",
            "建站",
            "区块链",
            "APP",
            "加密转码",
            "云原生",
            "架构",
            "爬虫",
            "计算机基础",
            "服务器",
            "阿里巴巴",
            "性能",
            "开源中国",
            "面试题解",
            "翻译",
            "Bootstrap",
            "知乎",
            "开发规范",
            "JSON",
            "LeetCode",
            "代码托管",
            "数据科学",
            "镜像",
            "问答",
            "1年工作经验",
            "多线程",
            "JVM"
          ],
          "place": "贵阳",
          "birthday": "1998-08-19",
          "school": "大连交通大学",
          "major": "软件工程",
          "education": "本科",
          "graduationYear": 2022,
          "jobStatus": "已工作",
          "company": null,
          "job": "后端",
          "workYear": 1,
          "direction": "后端",
          "goal": "社招",
          "github": null,
          "blog": null,
          "score": 10,
          "coin": 100,
          "followeeNum": 1,
          "followNum": 2,
          "followStatus": null,
          "vipExpireTime": "2024-05-06T08:11:59.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-05-02T14:40:24.000+00:00",
          "updateTime": "2023-05-12T02:24:04.000+00:00"
        },
        "tags": [
          "文章",
          "爬虫"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1656576597383221249",
        "title": "大三 - Java工程师 - 暑期实习",
        "description": "Java 后端 暑期实习 简历，为了个人隐私，下面简历的个人相关信息以及学校和上线地址都是假的，好像上传不了PDF文件，这里就上传图片了，麻烦鱼皮大佬看看简历了",
        "content": "\n![柳贯一_Java工程师暑期实习.png](https://pic.code-nav.cn/post_picture/1630867681630584833/6rGKb73s-柳贯一_Java工程师暑期实习.png)",
        "category": "文章",
        "cover": "https://pic.code-nav.cn/post_cover/1630867681630584833/SADEkkWB-柳贯一_Java工程师暑期实习 (1).png",
        "language": null,
        "viewNum": 19,
        "thumbNum": 0,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1630867681630584833",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-11T08:26:53.000+00:00",
        "updateTime": "2023-05-12T09:00:48.000+00:00",
        "user": {
          "id": "1630867681630584833",
          "planetCode": "16009",
          "userName": "柳贯一",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/LELAckV51gNyNcXTlOiceZVy3g7AOVnfvGRpkXYGbf8wOj3378DLDcicTNBt7BleC57l8UY5qo67gysRCwFZjqOg/132",
          "gender": null,
          "userProfile": null,
          "userRole": "vip",
          "interests": null,
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": null,
          "goal": null,
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 0,
          "followNum": 0,
          "followStatus": null,
          "vipExpireTime": "2024-02-29T14:10:10.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-03-01T09:48:50.000+00:00",
          "updateTime": "2023-05-11T03:55:35.000+00:00"
        },
        "tags": [
          "文章",
          "简历",
          "大三"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1656163797901021186",
        "title": "springBean的生命周期",
        "description": "Spring Framework的Bean生命周期包括以下阶段：",
        "content": "Spring Framework的Bean生命周期包括以下阶段：\n\n1. 实例化：容器创建Bean实例。\n\n2. 属性赋值：容器通过setter方法注入Bean的属性值。\n\n3. 自定义初始化：容器调用Bean的初始化方法进行自定义初始化。例如：实现InitializingBean接口，或者在配置文件中通过init-method属性指定初始化方法名称。\n\n4. Bean后置处理：在Bean初始化之前或之后，容器调用BeanPostProcessor接口实现类的postProcessBeforeInitialization和postProcessAfterInitialization方法完成一些额外的处理工作。\n\n5. 初始化完成：Bean初始化完成，可以开始对外提供服务了。\n\n6. 自定义销毁：当容器关闭时，或者调用destroy-method指定的方法时，容器会调用Bean的自定义销毁方法进行处理。\n\n7. 单例Bean销毁：当容器关闭时，容器调用单例Bean的destroy方法销毁Bean。\n\n注意：以上步骤仅适用于Singleton作用域的Bean。对于Prototype作用域的Bean，容器不会管理其生命周期。因此，在使用Prototype作用域的Bean时应该注意手动销毁Bean。",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 46,
        "thumbNum": 1,
        "favourNum": 3,
        "commentNum": 1,
        "priority": 0,
        "userId": "1624136166762680322",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-10T05:06:34.000+00:00",
        "updateTime": "2023-05-12T08:55:25.000+00:00",
        "user": {
          "id": "1624136166762680322",
          "planetCode": "3082",
          "userName": "Petrichor",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/RfYxfXvFd23sUVq4z1MLg6icViaEWzWDSgEXSEUJa7OBHicmhNqib8MCh5Gmt3yekXkICibHHFOArOU3UFEZKuZcwnw/132",
          "gender": 0,
          "userProfile": null,
          "userRole": "vip",
          "interests": [
            "资源"
          ],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": "后端",
          "goal": "社招",
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 3,
          "followNum": 1,
          "followStatus": null,
          "vipExpireTime": "2024-02-19T22:54:28.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-02-10T20:00:11.000+00:00",
          "updateTime": "2023-05-10T14:32:36.000+00:00"
        },
        "tags": [
          "文章",
          "Java"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1656149907809013762",
        "title": "MySQL的SQL语句性能优化",
        "description": "MySQL的SQL语句性能优化可以通过以下几个方面来实现：",
        "content": "MySQL的SQL语句性能优化可以通过以下几个方面来实现：\n\n1. 合理设计表结构：表的设计需要根据数据的特点和实际需要进行优化。比如，使用合适的数据类型、避免使用过多的关联表、遵循数据库范式等。\n\n2. 优化查询语句：对于查询语句，应该尽量避免使用SELECT *，而是指定需要的字段，以减小数据传输的量。同时，使用合适的WHERE条件、建立索引等能有效提高查询效率，减少不必要的数据扫描。\n\n3. 优化表结构和查询语句的性能都离不开MySQL的索引机制。索引的建立需要考虑字段的选择、类型和长度等因素，以及在使用索引的同时也要考虑索引的维护和更新的开销。\n\n4. 避免大量的重复操作。在编写SQL语句时，应该考虑到需要执行的操作数，避免在循环或递归语句中进行大量的重复操作。\n\n5. 应用缓存：尽可能地使用缓存技术，如将常用的查询结果缓存到Redis等内存型数据库中，从而无需每次都执行SQL查询语句。\n\n最后，为了保证数据库的高可用性和高安全性，还需要对数据库进行备份和恢复、监控和日志记录等操作，以及定期进行数据库维护、优化和升级等工作。",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 33,
        "thumbNum": 2,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1624136166762680322",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-10T04:11:22.000+00:00",
        "updateTime": "2023-05-12T09:22:33.000+00:00",
        "user": {
          "id": "1624136166762680322",
          "planetCode": "3082",
          "userName": "Petrichor",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/RfYxfXvFd23sUVq4z1MLg6icViaEWzWDSgEXSEUJa7OBHicmhNqib8MCh5Gmt3yekXkICibHHFOArOU3UFEZKuZcwnw/132",
          "gender": 0,
          "userProfile": null,
          "userRole": "vip",
          "interests": [
            "资源"
          ],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": "后端",
          "goal": "社招",
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 3,
          "followNum": 1,
          "followStatus": null,
          "vipExpireTime": "2024-02-19T22:54:28.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-02-10T20:00:11.000+00:00",
          "updateTime": "2023-05-10T14:32:36.000+00:00"
        },
        "tags": [
          "文章",
          "MySQL"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1656149642863218690",
        "title": "MySQL主从复制流程",
        "description": "MySQL主从复制是一种常用的数据库复制技术，用于实现数据库的高可用性和可伸缩性。下面是MySQL主从复制的基本流程：",
        "content": "MySQL主从复制是一种常用的数据库复制技术，用于实现数据库的高可用性和可伸缩性。下面是MySQL主从复制的基本流程：\n\n1. 配置主数据库（Master）：在主数据库中，需要开启二进制日志功能并设置一个唯一的日志文件名和位置，以便从数据库（Slave）可以下载并应用这些日志。\n\n2. 配置从数据库（Slave）：在从数据库中，需要设置主数据库的IP地址、用户名和密码等信息，以便从数据库可以连接主数据库进行数据复制。同时，需要指定从数据库的唯一标识（如server-id），以确保主从复制的正确性。\n\n3. 启动主从复制：在从数据库中执行\"CHANGE MASTER TO\"命令，设置主数据库IP、用户名、密码等信息，并通过\"START SLAVE\"命令使从数据库连接主数据库并开始复制数据。\n\n4. 数据复制：主数据库将所有更改写入到二进制日志中，从数据库通过读取和解析这些日志文件来复制数据，并在从数据库中应用这些更改。\n\n5. 监控和维护：为了确保主从复制的可靠性，需要对主从数据库进行定期监控和维护，例如检查主从数据库的同步状态、调整网络带宽、备份和恢复数据等。\n\n需要注意的是，MySQL主从复制只适用于单向复制，即主数据库向从数据库的数据复制。如果需要进行双向同步复制，需要使用主主复制或者Galera Cluster等技术。同时，在主从复制中，也需要注意数据一致性和安全性的问题，例如主从数据库的时钟同步、数据加密等。",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 10,
        "thumbNum": 1,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1624136166762680322",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-10T04:10:19.000+00:00",
        "updateTime": "2023-05-11T08:19:43.000+00:00",
        "user": {
          "id": "1624136166762680322",
          "planetCode": "3082",
          "userName": "Petrichor",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/RfYxfXvFd23sUVq4z1MLg6icViaEWzWDSgEXSEUJa7OBHicmhNqib8MCh5Gmt3yekXkICibHHFOArOU3UFEZKuZcwnw/132",
          "gender": 0,
          "userProfile": null,
          "userRole": "vip",
          "interests": [
            "资源"
          ],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": "后端",
          "goal": "社招",
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 3,
          "followNum": 1,
          "followStatus": null,
          "vipExpireTime": "2024-02-19T22:54:28.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-02-10T20:00:11.000+00:00",
          "updateTime": "2023-05-10T14:32:36.000+00:00"
        },
        "tags": [
          "文章",
          "MySQL"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1656149295285440514",
        "title": "MySQL的B+ 树与B-树",
        "description": "MySQL的B+ 树与B-树",
        "content": "MySQL使用B+树和B-树作为索引结构来加速数据库操作。这两种树都是多路搜索树，主要的区别在于它们在节点中存储的数据项的数量不同。\n\nB+树是以平衡树为基础的一种多路搜索树。在B+树中，所有的关键字都出现在叶子节点的链表中（因此也称为关键字稠密索引），即每个节点中存储的是key-value键值对，但非叶子节点只起到索引作用，不存储数据。这种设计可以使得B+树在查找、插入、删除操作中都更加高效。因此，B+树主要用于支持范围查询。\n\nB-树也是一种多路平衡树结构，与B+树的最大区别在于B-树的非叶子节点会存储数据项（键值对），而不仅仅是索引信息。这样可以减少树的高度，从而提高查询效率。B-树主要用于磁盘或其他外部存储系统的文件系统。\n\n总之，两者都是面向磁盘存储的索引结构，由于I/O操作成为瓶颈，它们的重点都放在了尽量减少I/O操作次数上。具体情况下，需要根据实际的业务需求和数据结构特征来选择使用哪种树。",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 8,
        "thumbNum": 1,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1624136166762680322",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-10T04:08:56.000+00:00",
        "updateTime": "2023-05-12T04:20:11.000+00:00",
        "user": {
          "id": "1624136166762680322",
          "planetCode": "3082",
          "userName": "Petrichor",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/RfYxfXvFd23sUVq4z1MLg6icViaEWzWDSgEXSEUJa7OBHicmhNqib8MCh5Gmt3yekXkICibHHFOArOU3UFEZKuZcwnw/132",
          "gender": 0,
          "userProfile": null,
          "userRole": "vip",
          "interests": [
            "资源"
          ],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": "后端",
          "goal": "社招",
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 3,
          "followNum": 1,
          "followStatus": null,
          "vipExpireTime": "2024-02-19T22:54:28.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-02-10T20:00:11.000+00:00",
          "updateTime": "2023-05-10T14:32:36.000+00:00"
        },
        "tags": [
          "文章",
          "MySQL"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      },
      {
        "id": "1656149077974355970",
        "title": "dubbo 与 openFeign的区别？",
        "description": "Dubbo和OpenFeign都是常用的分布式服务框架，它们的主要区别在于以下几点",
        "content": "Dubbo和OpenFeign都是常用的分布式服务框架，它们的主要区别在于以下几点：\n\n1. 服务调用方式不同：Dubbo使用RPC调用，而OpenFeign使用HTTP调用。Dubbo的RPC调用性能更高，而且可以使用多种协议，包括Dubbo协议、HTTP协议等。OpenFeign则是基于HTTP协议的RESTful风格的服务调用框架。\n\n2. 远程服务的管理方式不同：Dubbo的远程服务管理采用的是注册中心，可以对服务进行注册、发现和管理，而OpenFeign则采用HTTP调用方式和服务发现的方式。\n\n3. 使用方式不同：在使用上，Dubbo需要依赖相应的注册中心、协议和其他配置，需要进行比较复杂的配置，OpenFeign则能够通过简单的注解配置即可进行调用和传输。\n\n综上所述，Dubbo更适合于需要高性能、高吞吐量和多协议支持的业务场景，而OpenFeign则更适合于微服务架构下的RESTful风格的服务调用和管理。",
        "category": "文章",
        "cover": null,
        "language": null,
        "viewNum": 11,
        "thumbNum": 1,
        "favourNum": 0,
        "commentNum": 0,
        "priority": 0,
        "userId": "1624136166762680322",
        "reviewStatus": 1,
        "reviewMessage": null,
        "reviewerId": null,
        "reviewTime": null,
        "createTime": "2023-05-10T04:08:04.000+00:00",
        "updateTime": "2023-05-12T07:02:32.000+00:00",
        "user": {
          "id": "1624136166762680322",
          "planetCode": "3082",
          "userName": "Petrichor",
          "userAvatar": "https://thirdwx.qlogo.cn/mmopen/vi_32/RfYxfXvFd23sUVq4z1MLg6icViaEWzWDSgEXSEUJa7OBHicmhNqib8MCh5Gmt3yekXkICibHHFOArOU3UFEZKuZcwnw/132",
          "gender": 0,
          "userProfile": null,
          "userRole": "vip",
          "interests": [
            "资源"
          ],
          "place": null,
          "birthday": null,
          "school": null,
          "major": null,
          "education": null,
          "graduationYear": null,
          "jobStatus": null,
          "company": null,
          "job": null,
          "workYear": null,
          "direction": "后端",
          "goal": "社招",
          "github": null,
          "blog": null,
          "score": 0,
          "coin": 0,
          "followeeNum": 3,
          "followNum": 1,
          "followStatus": null,
          "vipExpireTime": "2024-02-19T22:54:28.000+00:00",
          "lastLoginTime": null,
          "createTime": "2023-02-10T20:00:11.000+00:00",
          "updateTime": "2023-05-10T14:32:36.000+00:00"
        },
        "tags": [
          "文章",
          "Java"
        ],
        "fileList": null,
        "videoList": null,
        "atUserList": null,
        "pictureList": null,
        "hasThumb": false,
        "hasFavour": false,
        "needVip": null,
        "atUserVOList": null
      }
    ],
    "total": "100",
    "size": "10",
    "current": "1",
    "orders": [],
    "optimizeCountSql": true,
    "searchCount": true,
    "countId": null,
    "maxLimit": null,
    "pages": "10"
  },
  "message": "ok"
}